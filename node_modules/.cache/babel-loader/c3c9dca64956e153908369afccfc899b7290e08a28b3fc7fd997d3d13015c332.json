{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44785\\\\Sofia and the Spectrum\\\\thespectrum\\\\spectrum\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst song1 = {\n  title: \"buy a ticket, babe\",\n  waveType: \"buy a ticket, babe.mp3\",\n  imageUrl: \"/Sofia6389.jpg\"\n};\nconst song2 = {\n  title: \"In My Head\",\n  waveType: \"in my head.mp3\",\n  imageUrl: \"/Sofia6409.jpg\"\n};\nconst song3 = {\n  title: \"Go\",\n  waveType: \"go.mp3\",\n  imageUrl: \"Sofia6411.jpg\"\n};\nconst song4 = {\n  title: \"What a piece of shit that guy is, huh?\",\n  waveType: \"what a piece of shit that guy is, huh_.mp3\",\n  imageUrl: \"Sofia6416.jpg\"\n};\nconst Home = () => {\n  _s();\n  const [play, setPlay] = useState(false);\n  const song1Ref = useRef < HTMLAudioElement > null;\n  const Max = 20;\n  function toggleAudio() {\n    if (play) {\n      var _song1Ref$current;\n      (_song1Ref$current = song1Ref.current) === null || _song1Ref$current === void 0 ? void 0 : _song1Ref$current.pause();\n      setPlay(false);\n    } else {\n      var _song1Ref$current2;\n      void ((_song1Ref$current2 = song1Ref.current) === null || _song1Ref$current2 === void 0 ? void 0 : _song1Ref$current2.play());\n      setPlay(true);\n    }\n  }\n  function handleVolume(e) {\n    const {\n      value\n    } = e.target;\n    const volume = Number(value) / MAX;\n    oceanRef.current.volume = volume;\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: song1Ref,\n      src: \"/buy a ticket, babe.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"RMS5Cmdw/Aw4uGkdC4hNv0gvzX8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","song1","title","waveType","imageUrl","song2","song3","song4","Home","_s","play","setPlay","song1Ref","HTMLAudioElement","Max","toggleAudio","_song1Ref$current","current","pause","_song1Ref$current2","handleVolume","e","value","target","volume","Number","MAX","oceanRef","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/44785/Sofia and the Spectrum/thespectrum/spectrum/src/components/Home.jsx"],"sourcesContent":["import React , {useRef, useState} from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst song1 = {\r\n    title: \"buy a ticket, babe\",\r\n    waveType: \"buy a ticket, babe.mp3\",\r\n    imageUrl: \"/Sofia6389.jpg\",\r\n};\r\nconst song2 = {\r\n    title: \"In My Head\",\r\n    waveType: \"in my head.mp3\",\r\n    imageUrl: \"/Sofia6409.jpg\",\r\n}\r\n\r\nconst song3 = {\r\n    title: \"Go\",\r\n    waveType: \"go.mp3\",\r\n    imageUrl: \"Sofia6411.jpg\",\r\n};\r\nconst song4 = {\r\n    title: \"What a piece of shit that guy is, huh?\",\r\n    waveType: \"what a piece of shit that guy is, huh_.mp3\",\r\n    imageUrl: \"Sofia6416.jpg\",\r\n};\r\nconst Home = () => {\r\n    const [play, setPlay ] = useState(false);\r\n    const song1Ref = useRef<HTMLAudioElement>(null);\r\n    const Max = 20;\r\n    function toggleAudio(): void {\r\n        if (play) {\r\n          song1Ref.current?.pause();\r\n          setPlay(false);\r\n        } else {\r\n          void song1Ref.current?.play();\r\n          setPlay(true);\r\n        }\r\n      }\r\n    \r\n      function handleVolume(e: React.ChangeEvent<HTMLInputElement>): void {\r\n        const { value } = e.target;\r\n        const volume = Number(value) / MAX;\r\n        oceanRef.current.volume = volume;\r\n      }\r\n    return (\r\n        <main>\r\n            <audio ref = {song1Ref} src={\"/buy a ticket, babe.mp3\"}></audio>\r\n      \r\n        </main>\r\n    );\r\n};\r\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAG;EACVC,KAAK,EAAE,oBAAoB;EAC3BC,QAAQ,EAAE,wBAAwB;EAClCC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMC,KAAK,GAAG;EACVH,KAAK,EAAE,YAAY;EACnBC,QAAQ,EAAE,gBAAgB;EAC1BC,QAAQ,EAAE;AACd,CAAC;AAED,MAAME,KAAK,GAAG;EACVJ,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMG,KAAK,GAAG;EACVL,KAAK,EAAE,wCAAwC;EAC/CC,QAAQ,EAAE,4CAA4C;EACtDC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMI,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAE,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAMc,QAAQ,GAAGf,MAAM,GAACgB,gBAAgB,GAAE,IAAK;EAC/C,MAAMC,GAAG,GAAG,EAAE;EACd,SAASC,WAAWA,CAAA,EAAS;IACzB,IAAIL,IAAI,EAAE;MAAA,IAAAM,iBAAA;MACR,CAAAA,iBAAA,GAAAJ,QAAQ,CAACK,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;MACzBP,OAAO,CAAC,KAAK,CAAC;IAChB,CAAC,MAAM;MAAA,IAAAQ,kBAAA;MACL,OAAAA,kBAAA,GAAKP,QAAQ,CAACK,OAAO,cAAAE,kBAAA,uBAAhBA,kBAAA,CAAkBT,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAAC,IAAI,CAAC;IACf;EACF;EAEA,SAASS,YAAYA,CAACC,CAAsC,EAAQ;IAClE,MAAM;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC1B,MAAMC,MAAM,GAAGC,MAAM,CAACH,KAAK,CAAC,GAAGI,GAAG;IAClCC,QAAQ,CAACV,OAAO,CAACO,MAAM,GAAGA,MAAM;EAClC;EACF,oBACIxB,OAAA;IAAA4B,QAAA,eACI5B,OAAA;MAAO6B,GAAG,EAAIjB,QAAS;MAACkB,GAAG,EAAE;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9D,CAAC;AAEf,CAAC;AAACzB,EAAA,CAzBID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA0BV,eAAeA,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}